Script started on Sun 17 May 2015 12:18:42 AM PDT
Daemon gpg-agent already running.
~
srufe001@hammer $ cd cs100/rshell
~/cs100/rshell
srufe001@hammer $ rsh.sh
bin/rshell
srufe001@hammer.cs.ucr.edu$ ##### testing pipes. myecho is a program who's 1st argument is the fd to output to, the other arguments are printed like in echo
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello | cat # show that pipes pass on stdout
hello
srufe001@hammer.cs.ucr.edu$ bin/myecho 2 hello | cat # show that pipes pass on stderr
hello
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 heooo | sed s_oo_ll_ | cat # show multiple pipes
hello
srufe001@hammer.cs.ucr.edu$ | bin/myecho 1 hello # show error message with pipe at the beginning
rshell: you cannot start a command with a pipe
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello | # show error message with pipe at the end
rshell: You must have a program to run after each pipe
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello | | cat # show error message with 2 consecutive pipes
rshell: you cannot pipe directly into another pipe
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello|cat # show that spacing is not an issue
hello
srufe001@hammer.cs.ucr.edu$ exit | cat # show built-in command working despite pipe
bin/rshell
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello | exit | cat <<< "hello" # show built-in command working after a pipe
bin/rshell
srufe001@hammer.cs.ucr.edu$ ##### testing >
srufe001@hammer.cs.ucr.edu$ rm bla.txt bla2.txt
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello sam > bla.txt # show basic use, and that > can create a file
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 2 hello mike > bla.txt # show that stderr does not redirect
hello mike
srufe001@hammer.cs.ucr.edu$ cat bla.txt
srufe001@hammer.cs.ucr.edu$ > bla.txt bin/myecho 1 hello busra # show redirection at the start of a command
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello busra
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello > bla.txt world # show arguments after redirection
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello rshell > bla.txt > bla2.txt # show redirection to 2 files. the rightmost one takes precedence
srufe001@hammer.cs.ucr.edu$ cat bla.txt
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello rshell
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello cs100>bla.txt # show that spacing is not an issue
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello cs100
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world > bla.txt | cat # show that > and | can be used together
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world > # show > at the end of command
rshell: You must give `>' a file to redirect into
srufe001@hammer.cs.ucr.edu$ ##### testing >> 
srufe001@hammer.cs.ucr.edu$ rm bla.txt bla2.txt
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello sam >> bla.txt # show basic use, and that >> can create a file
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 2 hello mike >> bla.txt # show that stderr does not redirect
hello mike
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
srufe001@hammer.cs.ucr.edu$ >> bla.txt bin/myecho 1 hello busra # show redirection at the start of a command
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
hello busra
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello >> bla.txt world # show arguments after redirection
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
hello busra
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello rshell >> bla.txt >> bla2.txt # show redirection to 2 files. the rightmost one takes precedence
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
hello busra
hello world
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello rshell
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello cs100>>bla.txt # show that spacing is not an issue
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
hello busra
hello world
hello cs100
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world >> bla.txt | cat # show that >> and | can be used together
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
hello busra
hello world
hello cs100
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello bla > bla.txt | bin/myecho 1 hello sam >> bla.txt # this should have strange results. I don't support this case
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello bla
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world >> # show >> at the end of command
rshell: You must give `>>' a file to redirect into
srufe001@hammer.cs.ucr.edu$ ##### test <
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 > bla.txt hello world # bla.txt will be used to help test <
srufe001@hammer.cs.ucr.edu$ cat < bla.txt # test basic use
hello world
srufe001@hammer.cs.ucr.edu$ cat<bla.txt # show that spacing is not an issue
hello world
srufe001@hammer.cs.ucr.edu$ cat < notafile # show error message when the file doesnt exist
open: No such file or directory
srufe001@hammer.cs.ucr.edu$ cat < bla.txt | cat # show < working with |
hello world
srufe001@hammer.cs.ucr.edu$ cat < bla.txt > bla2.txt # show > working with <
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat > bla2.txt < bla.txt # show > working with < in a different order
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat < bla.txt >> bla2.txt # show >> working with <
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello world
hello world
srufe001@hammer.cs.ucr.edu$ cat >> bla2.txt < bla.txt # show >> working with < in a different order
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello world
hello world
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello cs100 > bla2.txt # this will be used to help test
srufe001@hammer.cs.ucr.edu$ cat < bla.txt < bla2.txt # show 2 redirections. the rightmost one will take precedence 
hello cs100
srufe001@hammer.cs.ucr.edu$ < bla.txt cat # show redirection at start of command
hello world
srufe001@hammer.cs.ucr.edu$ cat < bla.txt -b # show arguments after redirection
     1	hello world
srufe001@hammer.cs.ucr.edu$ cat -b < bla.txt # show < after argument
     1	hello world
srufe001@hammer.cs.ucr.edu$ cat<bla.txt # show that spacing is not an issue
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world < # show < at the end of command
you must give `<' a file to read from
srufe001@hammer.cs.ucr.edu$ ##### test quoted strings with "
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 "hello || && ; | > >> <<< < sam" # show that quote doesn't proccess spaces or other special symbols specially
hello || && ; | > >> <<< < sam
srufe001@hammer.cs.ucr.edu$ "bin/myecho" 1 "hello sam" # show that quote can be used for executables too
hello sam
srufe001@hammer.cs.ucr.edu$ # show that the end quote is not necessary
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 "hello sam
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 I" say hello "sam # show quotations inside of an argument
I say hello sam
srufe001@hammer.cs.ucr.edu$ ##### test extra credit 1: <<< operator
srufe001@hammer.cs.ucr.edu$ cat <<< hello # show basic use without 
hello
srufe001@hammer.cs.ucr.edu$ cat <<< " hello sam " # show basic use with quoted string
 hello sam 
srufe001@hammer.cs.ucr.edu$ cat < bla.txt <<< cs100 # show that rightmost redirection takes precedence
cs100
srufe001@hammer.cs.ucr.edu$ cat <<< cs100 < bla.txt # show that rightmost redirection takes precedence
hello world
srufe001@hammer.cs.ucr.edu$ <<< "cs100 is my favorite class so far. except maybe cs61" cat # show <<< at start of command
cs100 is my favorite class so far. except maybe cs61
srufe001@hammer.cs.ucr.edu$ cat <<< cs100 > bla.txt # show <<< in use with a redirector that redirects stdout
srufe001@hammer.cs.ucr.edu$ cat bla.txt
cs100
srufe001@hammer.cs.ucr.edu$ cat<<<"hi sam" # show that spacing is not an issue
hi sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello world <<< # show <<< at the end of command
you must give `<<<' a string to use as input
srufe001@hammer.cs.ucr.edu$ ##### test extra credit 2:
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello sam 1> bla.txt # show redirection to stdout
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 2 hello mike 1> bla.txt # show that the wrong file descriptor does not redirect
hello mike
srufe001@hammer.cs.ucr.edu$ cat bla.txt
srufe001@hammer.cs.ucr.edu$ bin/myecho 2 hello busra 2> bla.txt # show redirection of stderr
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello busra
srufe001@hammer.cs.ucr.edu$ bin/myecho 3 hello world 3> bla.txt # show redirection of 3
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello world
srufe001@hammer.cs.ucr.edu$ bin/myecho 450 hello cs100 450> bla.txt # show redirection of some random file descriptor
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello cs100
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello2> bla.txt # show how > does not grab the previous argument as the file descriptor number if its not a number
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello2
srufe001@hammer.cs.ucr.edu$ bin/myecho 4 hello rshell 4>> bla.txt # show it working with >>
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello2
hello rshell
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello sam 0> bla.txt # redirecting stdin
hello sam
srufe001@hammer.cs.ucr.edu$ cat bla.txt
srufe001@hammer.cs.ucr.edu$ ##### show many different redirections working together
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 give me an F plus | sed s_F_A_ | cat ; cat <<< "cs100 sucks" | sed s_sucks_rocks_ > bla.txt && bin/myecho 3 best class 2015 3>> bla.txt
give me an A plus
srufe001@hammer.cs.ucr.edu$ cat bla.txt
cs100 rocks
best class 2015
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello sam > bla.txt | cat # show that when stdout is redirected, it does not go through the pipe
srufe001@hammer.cs.ucr.edu$ cat bla.txt
hello sam
srufe001@hammer.cs.ucr.edu$ bin/myecho 1 hello | false && bin/myecho 1 this wont print # show that connectors take the last truth value in the pipe chain 
srufe001@hammer.cs.ucr.edu$ ##### the example in the homework specification
srufe001@hammer.cs.ucr.edu$ cat < bla.txt | tr A-Z a-z | tee bla2.txt | tr a-z A-Z > bla3.txt
srufe001@hammer.cs.ucr.edu$ cat bla2.txt
hello sam
srufe001@hammer.cs.ucr.edu$ cat bla3.txt
HELLO SAM
srufe001@hammer.cs.ucr.edu$ exit
~/cs100/rshell
srufe001@hammer $ exit
exit

Script done on Sun 17 May 2015 12:18:47 AM PDT
